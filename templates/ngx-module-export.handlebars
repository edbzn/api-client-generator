{{> header}}

import { NgModule, ModuleWithProviders } from '@angular/core';
import { {{&serviceName}}, USE_DOMAIN, USE_HTTP_OPTIONS } from './{{&serviceFileName}}';
import { Guarded{{&serviceName}} } from './guarded-{{&serviceFileName}}';
import { APIClientModuleConfig } from '{{#if serviceTag}}../.{{/if}}./types';

export { {{&serviceName}} } from './{{&serviceFileName}}';
export { {{&interfaceName}} } from './{{&interfaceFileName}}';
export { Guarded{{&serviceName}} } from './guarded-{{&serviceFileName}}';

@NgModule({})
export class {{&serviceName}}Module {
  /**
   * Use this method in your root module to provide the {{&serviceName}}Module
   *
   * If you are not providing
   * @param { APIClientModuleConfig } config
   * @returns { ModuleWithProviders }
   */
  static forRoot(config: APIClientModuleConfig = {}): ModuleWithProviders<{{&serviceName}}Module> {
    return {
      ngModule: {{&serviceName}}Module,
      providers: [
        ...(config.domain != null ? [{provide: USE_DOMAIN, useValue: config.domain}] : []),
        ...(config.httpOptions ? [{provide: USE_HTTP_OPTIONS, useValue: config.httpOptions}] : []),
        ...(config.guardResponses ? [{provide: {{&serviceName}}, useClass: Guarded{{&serviceName}} }] : [{{&serviceName}}]),
      ]
    };
  }
}
