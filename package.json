{
  "name": "api-client-generator",
  "version": "5.0.0-beta.0",
  "description": "Angular REST API client generator from Swagger YAML or JSON file with camel case settings",
  "homepage": "https://github.com/flowup/api-client-generator/blob/master/README.md",
  "main": "src/main.ts",
  "author": {
    "name": "FlowUp",
    "email": "hello@flowup.cz",
    "url": "https://flowup.cz"
  },
  "bin": {
    "api-client-generator": "./dist/main.js"
  },
  "bugs": {
    "url": "https://github.com/flowup/api-client-generator/issues"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:flowup/api-client-generator.git"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "keywords": [
    "swagger",
    "open-api",
    "rest",
    "angular11",
    "angular10",
    "angular9",
    "angular8",
    "angular7",
    "angular6",
    "angular5",
    "angular",
    "ngx",
    "scaffolding",
    "webapi",
    "api",
    "apiclient",
    "generator",
    "camelCase",
    "HTTP",
    "HTTPClient"
  ],
  "engines": {
    "node": ">=8.9.1",
    "yarn": ">=1.4.0"
  },
  "license": "MIT",
  "scripts": {
    "generate": "node ./dist/main.js",
    "build": "npm run lint && rimraf dist && tsc",
    "lint": "tslint -p tsconfig.json -c tslint.json src/**/*.ts",
    "gen": "ts-node --files ./src/main.ts",
    "gen:all": "npm run gen-custom && npm run gen-custom-without-guards && npm run gen-esquare && npm run gen-gcloud-firestore && npm run gen-github && npm run gen-filtered-api && npm run gen-pet-store && npm run gen-with-all-tags",
    "gen:all:parallel": "concurrently --kill-others-on-fail \"npm:gen-*\"",
    "gen-custom": "rimraf ./tests/custom/api && ts-node --files ./src/main.ts -s ./tests/custom/swagger.yaml -o ./tests/custom/api",
    "gen-custom-without-guards": "rimraf ./tests/custom-without-guards/api && ts-node --files ./src/main.ts -s ./tests/custom/swagger.yaml -o ./tests/custom-without-guards/api -g",
    "gen-esquare": "rimraf ./tests/esquare/api && ts-node --files ./src/main.ts -s ./tests/esquare/swagger.yaml -o ./tests/esquare/api",
    "gen-gcloud-firestore": "rimraf ./tests/gcloud-firestore/api && ts-node --files ./src/main.ts -s ./tests/gcloud-firestore/swagger.yaml -o ./tests/gcloud-firestore/api",
    "gen-github": "rimraf ./tests/github/api && ts-node --files ./src/main.ts -s ./tests/github/swagger.yaml -o ./tests/github/api -t all",
    "gen-filtered-api": "rimraf ./tests/filtered-api/api && ts-node --files ./src/main.ts -s ./tests/filtered-api/swagger.json -o ./tests/filtered-api/api -t DummySelector,Project,NonExistingTag -m",
    "gen-pet-store": "rimraf ./tests/pet-store/api && ts-node --files ./src/main.ts --verbose -s ./tests/pet-store/swagger.yaml -o ./tests/pet-store/api",
    "gen-with-all-tags": "rimraf ./tests/with-all-tags/api && ts-node --files ./src/main.ts -s ./tests/with-all-tags/swagger.json -o ./tests/with-all-tags/api -t all",
    "release": "npm run tests && npm run build && standard-version --tag-prefix=''",
    "test": "jest",
    "intg-tests:gen-all-tags": "rimraf tests/test-angular-project/src/api-all-tags && npm run gen -- src/main.ts -s tests/test-angular-project/swagger.yaml -o tests/test-angular-project/src/api-all-tags -t all",
    "intg-tests:gen-no-tag": "rimraf tests/test-angular-project/src/api-no-tags && npm run gen -- src/main.ts -s tests/test-angular-project/swagger.yaml -o tests/test-angular-project/src/api-no-tags",
    "intg-tests:clear-gen": "rimraf tests/test-angular-project/src/api-no-tags && rimraf tests/test-angular-project/src/api-all-tags",
    "intg-tests:run-tests": "cd tests/test-angular-project && npm run test",
    "intg-tests:run-build": "cd tests/test-angular-project && npm run build",
    "intg-tests": "concurrently --kill-others-on-fail \"npm:intg-tests:gen-*\" && concurrently --kill-others-on-fail \"npm:intg-tests:run-*\" && npm run intg-tests:clear-gen",
    "tests": "npm run test && npm run intg-tests",
    "prettier": "prettier --write \"**/*.{js,json,yaml,css,scss,md,ts,html,component.html}\"",
    "dev:install": "npm ci --silent && cd tests/test-angular-project && npm ci --silent"
  },
  "dependencies": {
    "handlebars": "^4.7.6",
    "optimist": "^0.6.1",
    "swagger-parser": "^6.0.5",
    "which": "^2.0.2"
  },
  "devDependencies": {
    "@types/jest": "^26.0.19",
    "@types/node": "^14.14.14",
    "@types/optimist": "0.0.29",
    "@types/rimraf": "^3.0.0",
    "@types/swagger-parser": "^4.0.3",
    "@types/swagger-schema-official": "^2.0.21",
    "@types/which": "^1.3.2",
    "concurrently": "^5.3.0",
    "dir-compare": "^2.4.0",
    "husky": "^4.3.6",
    "jest": "^26.6.3",
    "jest-preset-typescript": "^1.2.0",
    "jest-sonar-reporter": "^2.0.0",
    "prettier": "^2.2.1",
    "pretty-quick": "^3.1.0",
    "rimraf": "^3.0.2",
    "standard-version": "^9.0.0",
    "swagger-schema-official": "^2.0.0-bab6bed",
    "ts-jest": "^26.4.4",
    "ts-node": "^9.1.1",
    "tslint": "^6.1.3",
    "tslint-immutable": "^6.0.1",
    "typescript": "^4.1.3"
  },
  "optionalDependencies": {
    "@angular/core": "^11.0.0",
    "@angular/common": "^11.0.0",
    "rxjs": "^6.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged",
      "pre-push": "npm run lint"
    }
  },
  "jest": {
    "preset": "jest-preset-typescript",
    "setupFilesAfterEnv": [
      "<rootDir>/setupJest.ts"
    ],
    "testRegex": "^\\/src\\/.*|\\.tests?\\.ts$",
    "modulePaths": [
      "<rootDir>/node_modules",
      "<rootDir>"
    ],
    "testResultsProcessor": "jest-sonar-reporter"
  }
}
