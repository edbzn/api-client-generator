/**
 * This file is auto-generated by the API client generator.
 * https://github.com/flowup/api-client-generator
 *
 * Avoid editing this file manually unless necessary.
 * Please report any bugs so they can be addressed in future versions.
 */

/* tslint:disable */
/* eslint-disable */

import { HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';import { HttpOptions } from './types';

import * as models from './models';
export interface APIClientInterface {
  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsBatchGet`.
   */
  firestoreProjectsDatabasesDocumentsBatchGetParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.BatchGetDocumentsRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     */
    database: string,
  };

  /**
   * Gets multiple documents.
   * 
   * 
   * Documents returned by this method are not guaranteed to be returned in the
   * same order that they were requested.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsBatchGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBatchGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.BatchGetDocumentsResponse>;
  firestoreProjectsDatabasesDocumentsBatchGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBatchGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.BatchGetDocumentsResponse>>;
  firestoreProjectsDatabasesDocumentsBatchGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBatchGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.BatchGetDocumentsResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsBeginTransaction`.
   */
  firestoreProjectsDatabasesDocumentsBeginTransactionParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.BeginTransactionRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     */
    database: string,
  };

  /**
   * Starts a new transaction.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsBeginTransaction(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBeginTransactionParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.BeginTransactionResponse>;
  firestoreProjectsDatabasesDocumentsBeginTransaction(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBeginTransactionParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.BeginTransactionResponse>>;
  firestoreProjectsDatabasesDocumentsBeginTransaction(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsBeginTransactionParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.BeginTransactionResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsCommit`.
   */
  firestoreProjectsDatabasesDocumentsCommitParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.CommitRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     */
    database: string,
  };

  /**
   * Commits a transaction, while optionally updating documents.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsCommit(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCommitParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.CommitResponse>;
  firestoreProjectsDatabasesDocumentsCommit(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCommitParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.CommitResponse>>;
  firestoreProjectsDatabasesDocumentsCommit(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCommitParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.CommitResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsListen`.
   */
  firestoreProjectsDatabasesDocumentsListenParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.ListenRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     */
    database: string,
  };

  /**
   * Listens to changes.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsListen(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListenParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.ListenResponse>;
  firestoreProjectsDatabasesDocumentsListen(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListenParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.ListenResponse>>;
  firestoreProjectsDatabasesDocumentsListen(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListenParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.ListenResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsRollback`.
   */
  firestoreProjectsDatabasesDocumentsRollbackParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.RollbackRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     */
    database: string,
  };

  /**
   * Rolls back a transaction.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsRollback(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRollbackParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Empty>;
  firestoreProjectsDatabasesDocumentsRollback(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRollbackParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Empty>>;
  firestoreProjectsDatabasesDocumentsRollback(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRollbackParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Empty>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsWrite`.
   */
  firestoreProjectsDatabasesDocumentsWriteParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.WriteRequest,
    /**
     * The database name. In the format:
     * `projects/{project_id}/databases/{database_id}`.
     * This is only required in the first message.
     */
    database: string,
  };

  /**
   * Streams batches of document updates and deletes, in order.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsWrite(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsWriteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.WriteResponse>;
  firestoreProjectsDatabasesDocumentsWrite(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsWriteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.WriteResponse>>;
  firestoreProjectsDatabasesDocumentsWrite(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsWriteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.WriteResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesIndexesDelete`.
   */
  firestoreProjectsDatabasesIndexesDeleteParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    /**
     * When set to `true`, the target document must exist.
     * When set to `false`, the target document must not exist.
     */
    currentDocumentExists?: boolean,
    /**
     * When set, the target document must exist and have been last updated at
     * that time.
     */
    currentDocumentUpdateTime?: string,
    /**
     * The index name. For example:
     * `projects/{project_id}/databases/{database_id}/indexes/{index_id}`
     */
    name: string,
  };

  /**
   * Deletes an index.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesIndexesDelete(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesDeleteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Empty>;
  firestoreProjectsDatabasesIndexesDelete(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesDeleteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Empty>>;
  firestoreProjectsDatabasesIndexesDelete(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesDeleteParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Empty>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesIndexesGet`.
   */
  firestoreProjectsDatabasesIndexesGetParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    /**
     * The list of field paths in the mask. See Document.fields for a field
     * path syntax reference.
     */
    maskFieldPaths?: string[],
    /**
     * The name of the index. For example:
     * `projects/{project_id}/databases/{database_id}/indexes/{index_id}`
     */
    name: string,
    /**
     * Reads the version of the document at the given time.
     * This may not be older than 60 seconds.
     */
    readTime?: string,
    /** Reads the document in a transaction. */
    transaction?: string,
  };

  /**
   * Gets an index.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesIndexesGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Index>;
  firestoreProjectsDatabasesIndexesGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Index>>;
  firestoreProjectsDatabasesIndexesGet(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesGetParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Index>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsPatch`.
   */
  firestoreProjectsDatabasesDocumentsPatchParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.Document,
    /**
     * When set to `true`, the target document must exist.
     * When set to `false`, the target document must not exist.
     */
    currentDocumentExists?: boolean,
    /**
     * When set, the target document must exist and have been last updated at
     * that time.
     */
    currentDocumentUpdateTime?: string,
    /**
     * The list of field paths in the mask. See Document.fields for a field
     * path syntax reference.
     */
    maskFieldPaths?: string[],
    /**
     * The resource name of the document, for example
     * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     */
    name: string,
    /**
     * The list of field paths in the mask. See Document.fields for a field
     * path syntax reference.
     */
    updateMaskFieldPaths?: string[],
  };

  /**
   * Updates or inserts a document.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsPatch(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsPatchParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Document>;
  firestoreProjectsDatabasesDocumentsPatch(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsPatchParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Document>>;
  firestoreProjectsDatabasesDocumentsPatch(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsPatchParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Document>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesIndexesList`.
   */
  firestoreProjectsDatabasesIndexesListParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    filter?: string,
    /** The standard List page size. */
    pageSize?: number,
    /** The standard List page token. */
    pageToken?: string,
    /**
     * The database name. For example:
     * `projects/{project_id}/databases/{database_id}`
     */
    parent: string,
  };

  /**
   * Lists the indexes that match the specified filters.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesIndexesList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.ListIndexesResponse>;
  firestoreProjectsDatabasesIndexesList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.ListIndexesResponse>>;
  firestoreProjectsDatabasesIndexesList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.ListIndexesResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesIndexesCreate`.
   */
  firestoreProjectsDatabasesIndexesCreateParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.Index,
    /**
     * The name of the database this index will apply to. For example:
     * `projects/{project_id}/databases/{database_id}`
     */
    parent: string,
  };

  /**
   * Creates the specified index.
   * A newly created index's initial state is `CREATING`. On completion of the
   * returned google.longrunning.Operation, the state will be `READY`.
   * If the index already exists, the call will return an `ALREADY_EXISTS`
   * status.
   * 
   * 
   * During creation, the process could result in an error, in which case the
   * index will move to the `ERROR` state. The process can be recovered by
   * fixing the data that caused the error, removing the index with
   * delete, then re-creating the index with
   * create.
   * 
   * 
   * Indexes with a single field cannot be created.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesIndexesCreate(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesCreateParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Operation>;
  firestoreProjectsDatabasesIndexesCreate(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesCreateParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Operation>>;
  firestoreProjectsDatabasesIndexesCreate(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesIndexesCreateParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Operation>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsList`.
   */
  firestoreProjectsDatabasesDocumentsListParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    /**
     * The collection ID, relative to `parent`, to list. For example: `chatrooms`
     * or `messages`.
     */
    collectionId: string,
    /**
     * The list of field paths in the mask. See Document.fields for a field
     * path syntax reference.
     */
    maskFieldPaths?: string[],
    /** The order to sort results by. For example: `priority desc, name`. */
    orderBy?: string,
    /** The maximum number of documents to return. */
    pageSize?: number,
    /** The `next_page_token` value returned from a previous List request, if any. */
    pageToken?: string,
    /**
     * The parent resource name. In the format:
     * `projects/{project_id}/databases/{database_id}/documents` or
     * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     * For example:
     * `projects/my-project/databases/my-database/documents` or
     * `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
     */
    parent: string,
    /**
     * Reads documents as they were at the given time.
     * This may not be older than 60 seconds.
     */
    readTime?: string,
    /**
     * If the list should show missing documents. A missing document is a
     * document that does not exist but has sub-documents. These documents will
     * be returned with a key but will not have fields, Document.create_time,
     * or Document.update_time set.
     * 
     * 
     * Requests with `show_missing` may not specify `where` or
     * `order_by`.
     */
    showMissing?: boolean,
    /** Reads documents in a transaction. */
    transaction?: string,
  };

  /**
   * Lists documents.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.ListDocumentsResponse>;
  firestoreProjectsDatabasesDocumentsList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.ListDocumentsResponse>>;
  firestoreProjectsDatabasesDocumentsList(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.ListDocumentsResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsCreateDocument`.
   */
  firestoreProjectsDatabasesDocumentsCreateDocumentParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.Document,
    /** The collection ID, relative to `parent`, to list. For example: `chatrooms`. */
    collectionId: string,
    /**
     * The client-assigned document ID to use for this document.
     * 
     * Optional. If not specified, an ID will be assigned by the service.
     */
    documentId?: string,
    /**
     * The list of field paths in the mask. See Document.fields for a field
     * path syntax reference.
     */
    maskFieldPaths?: string[],
    /**
     * The parent resource. For example:
     * `projects/{project_id}/databases/{database_id}/documents` or
     * `projects/{project_id}/databases/{database_id}/documents/chatrooms/{chatroom_id}`
     */
    parent: string,
  };

  /**
   * Creates a new document.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsCreateDocument(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCreateDocumentParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.Document>;
  firestoreProjectsDatabasesDocumentsCreateDocument(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCreateDocumentParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.Document>>;
  firestoreProjectsDatabasesDocumentsCreateDocument(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsCreateDocumentParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.Document>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsListCollectionIds`.
   */
  firestoreProjectsDatabasesDocumentsListCollectionIdsParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.ListCollectionIdsRequest,
    /**
     * The parent document. In the format:
     * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     * For example:
     * `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
     */
    parent: string,
  };

  /**
   * Lists all the collection IDs underneath a document.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsListCollectionIds(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListCollectionIdsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.ListCollectionIdsResponse>;
  firestoreProjectsDatabasesDocumentsListCollectionIds(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListCollectionIdsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.ListCollectionIdsResponse>>;
  firestoreProjectsDatabasesDocumentsListCollectionIds(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsListCollectionIdsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.ListCollectionIdsResponse>>;

  /**
   * Arguments object for method `firestoreProjectsDatabasesDocumentsRunQuery`.
   */
  firestoreProjectsDatabasesDocumentsRunQueryParams?: {
    /**
     * - error format
     * - 1 V1
     * - 2 V2
     * 
     */
    $Xgafv?: models.$Xgafv,
    /** OAuth access token. */
    accessToken?: string,
    /**
     * Data format for response.
     * If not set, server will use the default value: json
     */
    alt?: models.Alt,
    /** OAuth bearer token. */
    bearerToken?: string,
    /** JSONP */
    callback?: string,
    /** Selector specifying which fields to include in a partial response. */
    fields?: string,
    /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
    key?: string,
    /** OAuth 2.0 token for the current user. */
    oauthToken?: string,
    /**
     * Pretty-print response.
     * If not set, server will use the default value: true
     */
    pp?: boolean,
    /**
     * Returns response with indentations and line breaks.
     * If not set, server will use the default value: true
     */
    prettyPrint?: boolean,
    /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
    quotaUser?: string,
    /** Legacy upload protocol for media (e.g. "media", "multipart"). */
    uploadType?: string,
    /** Upload protocol for media (e.g. "raw", "multipart"). */
    uploadProtocol?: string,
    body?: models.RunQueryRequest,
    /**
     * The parent resource name. In the format:
     * `projects/{project_id}/databases/{database_id}/documents` or
     * `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     * For example:
     * `projects/my-project/databases/my-database/documents` or
     * `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
     */
    parent: string,
  };

  /**
   * Runs a query.
   * Response generated for [ 200 ] HTTP response code.
   */
  firestoreProjectsDatabasesDocumentsRunQuery(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRunQueryParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.RunQueryResponse>;
  firestoreProjectsDatabasesDocumentsRunQuery(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRunQueryParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.RunQueryResponse>>;
  firestoreProjectsDatabasesDocumentsRunQuery(
    args: Exclude<APIClientInterface['firestoreProjectsDatabasesDocumentsRunQueryParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.RunQueryResponse>>;

}
