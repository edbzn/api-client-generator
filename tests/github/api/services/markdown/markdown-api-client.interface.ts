/**
 * This file is auto-generated by the API client generator.
 * https://github.com/flowup/api-client-generator
 *
 * Avoid editing this file manually unless necessary.
 * Please report any bugs so they can be addressed in future versions.
 */

/* tslint:disable */
/* eslint-disable */

import { Observable } from 'rxjs';
import { HttpOptions } from '../../types';

import * as models from '../../models';

export interface MarkdownAPIClientInterface {

  /**
   * Arguments object for method `postMarkdown`.
   */
  postMarkdownParams?: {
    /**  (optional) You can check the current version of media type in responses.  */
    xGitHubMediaType?: string,
    /**  (optional) Is used to set specified media type. */
    accept?: string,
    xRateLimit?: number,
    xRateLimitRemaining?: number,
    xRateLimitReset?: number,
    xGitHubRequestId?: number,
    body: models.Markdown,
  };

  /**
   * Render an arbitrary Markdown document
   * Response generated for [ 200 ] HTTP response code.
   */
  postMarkdown(
    args: Exclude<MarkdownAPIClientInterface['postMarkdownParams'], undefined>,
    requestHttpOptions?: HttpOptions
  ): Observable<void>;

  /**
   * Arguments object for method `postMarkdownRaw`.
   */
  postMarkdownRawParams?: {
    /**  (optional) You can check the current version of media type in responses.  */
    xGitHubMediaType?: string,
    /**  (optional) Is used to set specified media type. */
    accept?: string,
    xRateLimit?: number,
    xRateLimitRemaining?: number,
    xRateLimitReset?: number,
    xGitHubRequestId?: number,
  };

  /**
   * Render a Markdown document in raw mode
   * Response generated for [ 200 ] HTTP response code.
   */
  postMarkdownRaw(
    args: Exclude<MarkdownAPIClientInterface['postMarkdownRawParams'], undefined>,
    requestHttpOptions?: HttpOptions
  ): Observable<void>;


}
