/**
 * This file is auto-generated by the API client generator.
 * https://github.com/flowup/api-client-generator
 *
 * Avoid editing this file manually unless necessary.
 * Please report any bugs so they can be addressed in future versions.
 */

/* tslint:disable */
/* eslint-disable */

import { HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';import { HttpOptions } from '../../types';

import * as models from '../../models';
export interface DummySelectorAPIClientInterface {
  /**
   * Arguments object for method `get`.
   */
  getParams?: {
    organizerTaskElementId: number,
  };

  /**
   * Response generated for [ 200 ] HTTP response code.
   */
  get(
    args: Exclude<DummySelectorAPIClientInterface['getParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.DummySelectorViewModel>;
  get(
    args: Exclude<DummySelectorAPIClientInterface['getParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.DummySelectorViewModel>>;
  get(
    args: Exclude<DummySelectorAPIClientInterface['getParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.DummySelectorViewModel>>;

  /**
   * Arguments object for method `getSettings`.
   */
  getSettingsParams?: {
    organizerTaskElementId: number,
  };

  /**
   * Response generated for [ 200 ] HTTP response code.
   */
  getSettings(
    args: Exclude<DummySelectorAPIClientInterface['getSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<models.DummySelectorSettings>;
  getSettings(
    args: Exclude<DummySelectorAPIClientInterface['getSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<models.DummySelectorSettings>>;
  getSettings(
    args: Exclude<DummySelectorAPIClientInterface['getSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<models.DummySelectorSettings>>;

  /**
   * Arguments object for method `putSettings`.
   */
  putSettingsParams?: {
    organizerTaskElementId: number,
    betriebSelectorSettings: models.DummySelectorSettings,
  };

  /**
   * Response generated for [ 200 ] HTTP response code.
   */
  putSettings(
    args: Exclude<DummySelectorAPIClientInterface['putSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<object>;
  putSettings(
    args: Exclude<DummySelectorAPIClientInterface['putSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<object>>;
  putSettings(
    args: Exclude<DummySelectorAPIClientInterface['putSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<object>>;

  /**
   * Arguments object for method `deleteSettings`.
   */
  deleteSettingsParams?: {
    organizerTaskElementId: number,
  };

  /**
   * Response generated for [ 200 ] HTTP response code.
   */
  deleteSettings(
    args: Exclude<DummySelectorAPIClientInterface['deleteSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'body',
  ): Observable<object>;
  deleteSettings(
    args: Exclude<DummySelectorAPIClientInterface['deleteSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'response',
  ): Observable<HttpResponse<object>>;
  deleteSettings(
    args: Exclude<DummySelectorAPIClientInterface['deleteSettingsParams'], undefined>,
    requestHttpOptions?: HttpOptions,
    observe?: 'events',
  ): Observable<HttpEvent<object>>;

}
